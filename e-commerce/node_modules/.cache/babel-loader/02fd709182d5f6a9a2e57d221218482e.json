{"ast":null,"code":"import Cookie from \"js-cookie\";\n\nfunction cartReducer(state = {\n  products: [],\n  shipping: {},\n  paymentMethod: {}\n}, action) {\n  if (action.type === \"add_to_cart\") {\n    const exsitingProduct = state.products.find(product => product.productId === action.payload.productId);\n\n    if (exsitingProduct) {\n      const newProducts = state.products.map(product => {\n        if (product.productId === exsitingProduct.productId) {\n          return { ...product,\n            qty: Number(product.qty) + Number(action.payload.qty)\n          };\n        } else {\n          return product;\n        }\n      });\n      Cookie.set(\"cartItems\", JSON.stringify(newProducts));\n      return {\n        products: newProducts\n      };\n    } else {\n      const newProducts = [...state.products, action.payload];\n      Cookie.set(\"cartItems\", JSON.stringify(newProducts));\n      return {\n        products: newProducts\n      };\n    }\n  } else if (action.type === \"delete_from_cart\") {\n    const newProducts = state.products.filter(product => product.productId !== action.productId);\n    Cookie.set(\"cartItems\", JSON.stringify(newProducts));\n    return {\n      products: newProducts\n    };\n  } else if (action.type === \"clear_cart\") {\n    Cookie.set(\"cartItems\", []);\n    return { ...state,\n      products: []\n    };\n  } else if (action.type === \"create_shipping_info\") {\n    return { ...state,\n      shipping: action.payload\n    };\n  } else if (action.type === \"create_payment_info\") {\n    return { ...state,\n      paymentMethod: action.payload\n    };\n  } else {\n    return state;\n  }\n}\n\nexport default cartReducer;","map":{"version":3,"sources":["C:/Users/power/Desktop/Vue/react_e-commerce/e-commerce/src/redusers/cartReducer.js"],"names":["Cookie","cartReducer","state","products","shipping","paymentMethod","action","type","exsitingProduct","find","product","productId","payload","newProducts","map","qty","Number","set","JSON","stringify","filter"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,WAAnB;;AAEA,SAASC,WAAT,CAAqBC,KAAK,GAAG;AAACC,EAAAA,QAAQ,EAAE,EAAX;AAAeC,EAAAA,QAAQ,EAAE,EAAzB;AAA6BC,EAAAA,aAAa,EAAE;AAA5C,CAA7B,EAA8EC,MAA9E,EAAsF;AAClF,MAAGA,MAAM,CAACC,IAAP,KAAgB,aAAnB,EACA;AACI,UAAMC,eAAe,GAAGN,KAAK,CAACC,QAAN,CAAeM,IAAf,CAAoBC,OAAO,IAAIA,OAAO,CAACC,SAAR,KAAsBL,MAAM,CAACM,OAAP,CAAeD,SAApE,CAAxB;;AACA,QAAGH,eAAH,EAAmB;AACf,YAAMK,WAAW,GAAGX,KAAK,CAACC,QAAN,CAAeW,GAAf,CAAmBJ,OAAO,IAAI;AAC9C,YAAGA,OAAO,CAACC,SAAR,KAAsBH,eAAe,CAACG,SAAzC,EAAmD;AAC/C,iBAAO,EAAC,GAAGD,OAAJ;AAAaK,YAAAA,GAAG,EAAEC,MAAM,CAACN,OAAO,CAACK,GAAT,CAAN,GAAsBC,MAAM,CAACV,MAAM,CAACM,OAAP,CAAeG,GAAhB;AAA9C,WAAP;AACH,SAFD,MAGI;AACA,iBAAOL,OAAP;AACH;AACJ,OAPmB,CAApB;AAQAV,MAAAA,MAAM,CAACiB,GAAP,CAAW,WAAX,EAAwBC,IAAI,CAACC,SAAL,CAAeN,WAAf,CAAxB;AACA,aAAO;AAACV,QAAAA,QAAQ,EAAEU;AAAX,OAAP;AACH,KAXD,MAYK;AACD,YAAMA,WAAW,GAAG,CAAC,GAAGX,KAAK,CAACC,QAAV,EAAoBG,MAAM,CAACM,OAA3B,CAApB;AACAZ,MAAAA,MAAM,CAACiB,GAAP,CAAW,WAAX,EAAwBC,IAAI,CAACC,SAAL,CAAeN,WAAf,CAAxB;AACA,aAAO;AAACV,QAAAA,QAAQ,EAAEU;AAAX,OAAP;AACH;AACJ,GApBD,MAqBK,IAAGP,MAAM,CAACC,IAAP,KAAgB,kBAAnB,EAAsC;AACvC,UAAMM,WAAW,GAAGX,KAAK,CAACC,QAAN,CAAeiB,MAAf,CAAsBV,OAAO,IAAIA,OAAO,CAACC,SAAR,KAAsBL,MAAM,CAACK,SAA9D,CAApB;AACAX,IAAAA,MAAM,CAACiB,GAAP,CAAW,WAAX,EAAwBC,IAAI,CAACC,SAAL,CAAeN,WAAf,CAAxB;AACA,WAAO;AAACV,MAAAA,QAAQ,EAAEU;AAAX,KAAP;AACH,GAJI,MAKA,IAAGP,MAAM,CAACC,IAAP,KAAgB,YAAnB,EAAgC;AACjCP,IAAAA,MAAM,CAACiB,GAAP,CAAW,WAAX,EAAwB,EAAxB;AACA,WAAO,EAAC,GAAGf,KAAJ;AAAWC,MAAAA,QAAQ,EAAE;AAArB,KAAP;AACH,GAHI,MAIA,IAAGG,MAAM,CAACC,IAAP,KAAgB,sBAAnB,EAA0C;AAC3C,WAAO,EAAC,GAAGL,KAAJ;AAAWE,MAAAA,QAAQ,EAAEE,MAAM,CAACM;AAA5B,KAAP;AACH,GAFI,MAGA,IAAGN,MAAM,CAACC,IAAP,KAAgB,qBAAnB,EAAyC;AAC1C,WAAO,EAAC,GAAGL,KAAJ;AAAWG,MAAAA,aAAa,EAAEC,MAAM,CAACM;AAAjC,KAAP;AACH,GAFI,MAGA;AACD,WAAOV,KAAP;AACH;AACJ;;AAED,eAAeD,WAAf","sourcesContent":["import Cookie from \"js-cookie\";\r\n\r\nfunction cartReducer(state = {products: [], shipping: {}, paymentMethod: {}}, action) {\r\n    if(action.type === \"add_to_cart\")\r\n    {\r\n        const exsitingProduct = state.products.find(product => product.productId === action.payload.productId);\r\n        if(exsitingProduct){\r\n            const newProducts = state.products.map(product => {\r\n                if(product.productId === exsitingProduct.productId){\r\n                    return {...product, qty: Number(product.qty) + Number(action.payload.qty)}\r\n                }\r\n                else{\r\n                    return product;\r\n                }\r\n            });\r\n            Cookie.set(\"cartItems\", JSON.stringify(newProducts))\r\n            return {products: newProducts}\r\n        }\r\n        else {\r\n            const newProducts = [...state.products, action.payload];\r\n            Cookie.set(\"cartItems\", JSON.stringify(newProducts))\r\n            return {products: newProducts}\r\n        }\r\n    }\r\n    else if(action.type === \"delete_from_cart\"){\r\n        const newProducts = state.products.filter(product => product.productId !== action.productId);\r\n        Cookie.set(\"cartItems\", JSON.stringify(newProducts))\r\n        return {products: newProducts};\r\n    }\r\n    else if(action.type === \"clear_cart\"){\r\n        Cookie.set(\"cartItems\", [])\r\n        return {...state, products: []};\r\n    }\r\n    else if(action.type === \"create_shipping_info\"){\r\n        return {...state, shipping: action.payload};\r\n    }\r\n    else if(action.type === \"create_payment_info\"){\r\n        return {...state, paymentMethod: action.payload};\r\n    }\r\n    else {\r\n        return state;\r\n    }\r\n}\r\n\r\nexport default cartReducer;\r\n"]},"metadata":{},"sourceType":"module"}